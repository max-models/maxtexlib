name: CI

on:
  push:
    branches:
      - main
      - devel
  pull_request:
    branches:
      - main
      - devel

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Adjust as needed

      # Cache pip dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install TeX Live with pdflatex
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive texlive-latex-base texlive-latex-extra texlive-fonts-recommended texlive-science

      - name: Check if pdflatex is available
        run: |
          which pdflatex || echo "pdflatex NOT found!"
          pdflatex --version || echo "pdflatex command failed!"

      # Create virtual environment and install project from pyproject.toml
      - name: Set up virtual environment and install project
        run: |
          python -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install .

      # Run a basic command to check installation
      - name: Check installation
        run: |
          source env/bin/activate
          pip list | grep maxtex
          which maxtex
          maxtexlib -h

      # Run tests
      - name: Run unit tests
        run: |
          source env/bin/activate
          pytest .
        env:
          CI: true

      # Run template project
      - name: Run template project
        run: |
          source env/bin/activate
          maxtexlib --new ci_project
          maxtexlib --project ci_project --path test_project
          maxtexlib --project ci_project --generate-project-template -y
          maxtexlib --project ci_project --generate-figures
          maxtexlib --project ci_project --compile
        env:
          CI: true
        
      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test_project
          path: test_project/
      
      # Code formatting check with black
      - name: Code formatting with black and isort
        run: |
          source env/bin/activate
          pip install black
          pip install isort
          black --check src/ tests/
          isort --check src/
